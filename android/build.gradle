group = "com.example.qr_app_plugin"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    ext.support_version = '25.3.1'
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.4")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.example.qr_app_plugin"

    compileSdk = 35

//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_11
//        targetCompatibility = JavaVersion.VERSION_11
//    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.3" // Use the same version as your Compose library
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    buildFeatures {
        compose = true
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        implementation("io.github.zxing-cpp:android:2.2.0")

        // camera
        implementation("androidx.camera:camera-core:1.4.1")
        implementation("androidx.camera:camera-view:1.4.1")

        // zxing
        implementation ("io.github.zxing-cpp:android:2.2.0")

        implementation "androidx.activity:activity-compose:1.9.3" // Replace with the latest version

        // Add Compose UI dependencies if not already added
        implementation "androidx.compose.ui:ui:1.7.6" // Compose UI toolkit
        implementation "androidx.compose.material:material:1.7.6" // Material Design components
        implementation "androidx.compose.ui:ui-tooling-preview:1.7.6" // Preview support

    }


    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
